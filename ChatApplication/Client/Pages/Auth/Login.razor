@page "/"
@using System.ComponentModel.DataAnnotations
@using System.IdentityModel.Tokens.Jwt
@using Client.Services
@inject HttpClient Http
@inject NavigationManager Navigation
@inject ILogger<Login> Logger
@inject AuthStateProvider AuthStateProvider

<h3>Login</h3>
@if (!string.IsNullOrEmpty(_errorMessage))
{
    <p class="text-danger">@_errorMessage</p>
}

<div class="input-group mb-3">
    <input class="form-control" @bind="_loginModel.Email" placeholder="Email" />
    <input class="form-control" type="password" @bind="_loginModel.Password" placeholder="Password" />
    <button class="btn btn-primary" @onclick="LoginUser">Login</button>
</div>

<button class="btn btn-primary" @onclick="NavigateToRegister">Not registered?</button>

@code {
    private LoginModel _loginModel = new();
    private string? _errorMessage;

    private async Task LoginUser()
    {
        var response = await Http.PostAsJsonAsync("http://localhost:5205/api/auth/login", _loginModel);

        if (response.IsSuccessStatusCode)
        {
            var result = await response.Content.ReadFromJsonAsync<LoginResponse>();
            await AuthStateProvider.SetUser(result!.Token);

            var handler = new JwtSecurityTokenHandler();
            var jsonToken = handler.ReadToken(result.Token) as JwtSecurityToken;
            var username = jsonToken!.Claims.First(claim => claim.Type == JwtRegisteredClaimNames.UniqueName)?.Value;

            if (!string.IsNullOrEmpty(username))
                await AuthStateProvider.SetUser(result.Token);

            Navigation.NavigateTo("/chat");
        }
        else
        {
            _errorMessage = "Login Fehlgeschlagen!";
        }
    }

    private void NavigateToRegister()
    {
        Navigation.NavigateTo("/auth/register");
    }
}

@code {
    class LoginModel
    {
        [Required, EmailAddress]
        public string Email { get; set; } = "";
        
        [Required, DataType(DataType.Password)]
        public string Password { get; set; } = "";
    }

    class LoginResponse
    {
        public string Token { get; set; } = "";
    }
}